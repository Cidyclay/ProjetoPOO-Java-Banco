package dao;

import modelo.Conta;
import modelo.Pessoa;

public class Conta_Fisica_DAO extends Conta {

	public Conta_Fisica_DAO(int numeroConta, Pessoa pessoa, Double saldo, Boolean status) {
		super(numeroConta, pessoa, saldo, status);
			
	}

	@Override
	public String toString() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void depositar(Double valor) {
		if(valor >0) {
			this.saldo = this.getSaldo() + valor;
			System.out.println("Seu depósito foi realizado com sucesso!");
		}else {
			System.out.println("Não foi possível realizar o depósito!");
		}
		
	}

	@Override
	public void sacar(Double valor) {
		if(valor> 0 && this.getSaldo() >= valor) {
			this.saldo = this.getSaldo() -valor;
			System.out.println("Saque realizado com sucesso!");
		}else {
			System.out.println("Não foi possível realziar o saque!");
		}
		
	}

	@Override
	public void fecharConta() {
		if(this.getStatus()==false) {
			System.out.println("Conta ja inativa.");
		}
		else if(this.getSaldo()>0) {
			System.out.println("Conta com saldo. Nao e possivel fecha-la.");
		}else {
			this.setStatus(false);
				System.out.println("Conta fechada com sucesso!");
				System.out.println("Obrigado volte sempre");
		}
	}

	@Override
	public void reabrirConta() {
		if (this.getStatus()==true) {
			System.out.println("Conta já ativa");
		}else {
			this.setStatus(true);
		}
		
	}

	@Override
	public void realizarTransferencia(double quantia, Conta destino) {
		if(this.getStatus()==false) {
			System.out.println("Conta de origem inativa.");
			
		}else if(destino.getStatus()==false) {
			System.out.println("Conta de destino inativa");
		}else if(quantia>=getSaldo()){
			System.out.println("Saldo insuficiente para transferencia.");
		}else {
			
			getSaldo() = getSaldo() - quantia;
		}
		
	}

}
